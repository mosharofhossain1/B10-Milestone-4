/* ЁЯФ╣ ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржХрзНрж▓рзЛржЬрж╛рж░ (Closures) ржПржмржВ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи (Callback Functions) ржмрзНржпрж╛ржЦрзНржпрж╛ (ржмрж╛ржВрж▓рж╛рзЯ) */

// ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯрзЗрж░ ржХрзНрж▓рзЛржЬрж╛рж░ (Closures) ржПржмржВ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи (Callback Functions) рж╣рж▓рзЛ ржЕрзНржпрж╛ржбржнрж╛ржирзНрж╕ржб ржХржирж╕рзЗржкрзНржЯ, ржпрж╛ ржлрж╛ржВрж╢ржирзЗрж░ ржХрж╛рж░рзНржпржкржжрзНржзрждрж┐, рж╕рзНржХрзЛржк, ржПржмржВ ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржмрзБржЭрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

/* ЁЯФ╣ ржХрзНрж▓рзЛржЬрж╛рж░ (Closures)
Closures ржХрзА?
ржХрзНрж▓рзЛржЬрж╛рж░ рж╣рж▓рзЛ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи, ржпрж╛ рждрж╛рж░ ржкрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржирзЗрж░ рж╕рзНржХрзЛржк (Scope) ржерзЗржХрзЗ ржбрж╛ржЯрж╛ ржмрж╛ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ ржПржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗ, ржПржоржиржХрж┐ ржкрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржи рж╢рзЗрж╖ рж╣рзЯрзЗ ржпрж╛ржУрзЯрж╛рж░ ржкрж░рзЗржУред

ЁЯСЙ рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрж▓рж▓рзЗ, ржпржЦржи ржПржХржЯрж┐ ржЗржирж╛рж░ ржлрж╛ржВрж╢ржи (Inner Function) ржЖржЙржЯрж╛рж░ ржлрж╛ржВрж╢ржирзЗрж░ (Outer Function) ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржПржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗ, рждржЦржи рж╕рзЗржЯрж┐ржХрзЗ ржХрзНрж▓рзЛржЬрж╛рж░ ржмрж▓рж╛ рж╣рзЯред */


// тЬЕ ржХрзНрж▓рзЛржЬрж╛рж░рзЗрж░ ржмрзНржпржмрж╣рж╛рж░

function outerFunc() {
    let count = 0;
    function innerFunc() {
        count++;
        console.log(count)
    }
    return innerFunc;
}

let counter = outerFunc();
counter();
counter();
counter();
