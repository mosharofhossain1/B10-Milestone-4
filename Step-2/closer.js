/* ЁЯФ╣ ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржХрзНрж▓рзЛржЬрж╛рж░ (Closures) ржПржмржВ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи (Callback Functions) ржмрзНржпрж╛ржЦрзНржпрж╛ (ржмрж╛ржВрж▓рж╛рзЯ) */

// ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯрзЗрж░ ржХрзНрж▓рзЛржЬрж╛рж░ (Closures) ржПржмржВ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи (Callback Functions) рж╣рж▓рзЛ ржЕрзНржпрж╛ржбржнрж╛ржирзНрж╕ржб ржХржирж╕рзЗржкрзНржЯ, ржпрж╛ ржлрж╛ржВрж╢ржирзЗрж░ ржХрж╛рж░рзНржпржкржжрзНржзрждрж┐, рж╕рзНржХрзЛржк, ржПржмржВ ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржмрзБржЭрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

/* ЁЯФ╣ ржХрзНрж▓рзЛржЬрж╛рж░ (Closures)
Closures ржХрзА?
ржХрзНрж▓рзЛржЬрж╛рж░ рж╣рж▓рзЛ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи, ржпрж╛ рждрж╛рж░ ржкрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржирзЗрж░ рж╕рзНржХрзЛржк (Scope) ржерзЗржХрзЗ ржбрж╛ржЯрж╛ ржмрж╛ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ ржПржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗ, ржПржоржиржХрж┐ ржкрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржи рж╢рзЗрж╖ рж╣рзЯрзЗ ржпрж╛ржУрзЯрж╛рж░ ржкрж░рзЗржУред

ЁЯСЙ рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрж▓рж▓рзЗ, ржпржЦржи ржПржХржЯрж┐ ржЗржирж╛рж░ ржлрж╛ржВрж╢ржи (Inner Function) ржЖржЙржЯрж╛рж░ ржлрж╛ржВрж╢ржирзЗрж░ (Outer Function) ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржПржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗ, рждржЦржи рж╕рзЗржЯрж┐ржХрзЗ ржХрзНрж▓рзЛржЬрж╛рж░ ржмрж▓рж╛ рж╣рзЯред */


// тЬЕ ржХрзНрж▓рзЛржЬрж╛рж░рзЗрж░ ржмрзНржпржмрж╣рж╛рж░

function outerFunc() {
    let count = 0;
    function innerFunc() {
        count++;
        console.log(count)
    }
    return innerFunc;
}

let counter = outerFunc();
counter();
counter();
counter();

/* ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░ржЫрзЗ?
1я╕ПтГг outerFunction() ржХрж▓ ржХрж░рж▓рзЗ count ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ рждрзИрж░рж┐ рж╣рзЯред
2я╕ПтГг innerFunction() рж░рж┐ржЯрж╛рж░рзНржи рж╣рзЯ, ржпрж╛ counter ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓рзЗ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗред
3я╕ПтГг counter() ржмрж╛рж░ржмрж╛рж░ ржХрж▓ ржХрж░рж▓рзЗ count ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗ ржПржмржВ ржмрж╛рзЬрждрзЗ ржерж╛ржХрзЗ, ржХрж╛рж░ржг innerFunction() ржПржЦржиржУ outerFunction()-ржПрж░ count ржПржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░ржЫрзЗ (Closures)ред */

// тЬЕ ржЖрж░рзЗржХржЯрж┐ ржХрзНрж▓рзЛржЬрж╛рж░ ржЙржжрж╛рж╣рж░ржг (ржлрж╛ржВрж╢ржи ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ рж╕рж╣)
function greet(name) {
    return function (message) {
        console.log(`${message}, ${name}!`);
    };
}

let sayHello = greet("Rahim");

sayHello("Good Morning");  // Good Morning, Rahim!
sayHello("Hello");         // Hello, Rahim!

/* ЁЯФ╣ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи (Callback Functions)
Callback Function ржХрзА?
ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржпржЦржи ржЖрж░рзЗржХржЯрж┐ ржлрж╛ржВрж╢ржирзЗрж░ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ рж╣рж┐рж╕рзЗржмрзЗ ржкрж╛ржарж╛ржирзЛ рж╣рзЯ ржПржмржВ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╢рж░рзНрждрзЗ ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ рж╣рзЯ, рждржЦржи рждрж╛ржХрзЗ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи ржмрж▓рзЗред

ЁЯУМ рж╕рж╛ржзрж╛рж░ржгржд, ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ:
тЬФ ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржЕржкрж╛рж░рзЗрж╢ржи (Asynchronous Operations)
тЬФ ржЗржнрзЗржирзНржЯ рж╣рзНржпрж╛ржирзНржбрж▓рж┐ржВ (Event Handling)
тЬФ ржбрж╛ржЯрж╛ ржкрзНрж░рж╕рзЗрж╕рж┐ржВ (Data Processing) */

// тЬЕ рж╕рж╛ржзрж╛рж░ржг ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржирзЗрж░ ржЙржжрж╛рж╣рж░ржг
function processData(data, callback) {
    console.log('Data Processing : ', data);
    callback();
}

function onComplate() {
    console.log('Data Processing Compleate', 2 + 2)
}

processData('User Info', onComplate)

// тЬЕ рж╕рзЗржЯржЯрж╛ржЗржоржЖржЙржЯ (setTimeout) ржжрж┐рзЯрзЗ ржХрж▓ржмрзНржпрж╛ржХ
setTimeout(function () {
    console.log('Hello I am Denayed')
}, 2000)

// ЁЯСЙ setTimeout()-ржП ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржХрж▓ржмрзНржпрж╛ржХ рж╣рж┐рж╕рзЗржмрзЗ ржжрзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗ, ржпрж╛ рзи рж╕рзЗржХрзЗржирзНржб ржкрж░ ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ рж╣ржмрзЗред

// тЬЕ ржЕрзНржпрж╛рж░рзЗ ржорзЗржержбрзЗ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи (forEach, map, filter)

// ЁЯФ╣ forEach() ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи:
let numbers = [1, 2, 3, 4];
numbers.forEach(function (num) {
    console.log(num * 2);
});

// ЁЯФ╣ map() ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржХрж▓ржмрзНржпрж╛ржХ ржлрж╛ржВрж╢ржи:
let doubleNumbers = numbers.map(function (num) {
    return num + 2
})
console.log(doubleNumbers)