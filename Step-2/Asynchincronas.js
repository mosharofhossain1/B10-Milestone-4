/* ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯ (Asynchronous JavaScript) ржмрзНржпрж╛ржЦрзНржпрж╛ (ржмрж╛ржВрж▓рж╛рзЯ)
ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржПржХржЯрж┐ рж╕рж┐ржЩрзНржЧрзЗрж▓-ржерзНрж░рзЗржбрзЗржб рж▓рзНржпрж╛ржЩрзНржЧрзБржпрж╝рзЗржЬ, ржпрж╛ рж╕рж╛ржзрж╛рж░ржгржд ржХрзЛржб рж╕рж┐рж░рж┐рзЯрж╛рж▓ржнрж╛ржмрзЗ (ржПржХржЯрж╛рж░ ржкрж░ ржПржХржЯрж╛) ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ ржХрж░рзЗред ржХрж┐ржирзНрждрзБ ржХрж┐ржЫрзБ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржЖржорж╛ржжрзЗрж░ ржПржоржи ржХрзЛржб рж▓рж┐ржЦрждрзЗ рж╣рзЯ, ржпрж╛ ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ (concurrently) ржмрж╛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕ржорзЯ ржкрж░ ржЪрж▓рзЗтАФржПржЯрж┐ржЗ ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ (Asynchronous) ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯред

ЁЯУМ ржХрзЗржи ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржкрзНрж░рзЯрзЛржЬржи?
тЬФ ржЯрж╛ржЗржорж╛рж░ (setTimeout, setInterval) ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп
тЬФ рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ ржбрж╛ржЯрж╛ ржлрзЗржЪ ржХрж░рждрзЗ (API call, fetch, AJAX)
тЬФ ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржбрзЗ ржХрж╛ржЬ ржХрж░рж╛рж░ ржЬржирзНржп (file read, database query) */

/* рззя╕ПтГг setTimeout() - ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕ржорзЯ ржкрж░рзЗ ржлрж╛ржВрж╢ржи ржЪрж╛рж▓рж╛ржирзЛ
setTimeout() рж╣рж▓рзЛ ржПржХржЯрж┐ ржмрж┐рж▓рзНржЯ-ржЗржи ржлрж╛ржВрж╢ржи, ржпрж╛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕ржорзЯ ржкрж░ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржЪрж╛рж▓рж╛рзЯред */

// тЬЕ ржЙржжрж╛рж╣рж░ржг: рзи рж╕рзЗржХрзЗржирзНржб ржкрж░ ржорзЗрж╕рзЗржЬ ржжрзЗржЦрж╛ржирзЛ

console.log('Start .........')

setTimeout(function () {
    console.log('SetTime FUnc is Running')
}, 5000);

console.log('Ending ..........')

// ЁЯСЙ ржПржЦрж╛ржирзЗ "End..." ржЖржЧрзЗ ржкрзНрж░рж┐ржирзНржЯ рж╣рзЯрзЗржЫрзЗ, ржХрж╛рж░ржг setTimeout() ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕, рждрж╛ржЗ ржПржЯрж┐ ржЕржкрзЗржХрзНрж╖рж╛ ржирж╛ ржХрж░рзЗ ржкрж░ржмрж░рзНрждрзА рж▓рж╛ржЗржирзЗ ржЪрж▓рзЗ ржпрж╛рзЯред


/* рзия╕ПтГг setInterval() - ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕ржорзЯ ржкрж░ржкрж░ ржлрж╛ржВрж╢ржи ржЪрж╛рж▓рж╛ржирзЛ
setInterval() рж╣рж▓рзЛ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи, ржпрж╛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржмрж┐рж░рждрж┐рждрзЗ (interval) ржмрж╛рж░ржмрж╛рж░ ржЪрж▓рзЗред */


// тЬЕ ржЙржжрж╛рж╣рж░ржг: ржкрзНрж░рждрж┐ рзз рж╕рзЗржХрзЗржирзНржб ржкрж░ Hello ржжрзЗржЦрж╛ржирзЛ
setInterval(function () {
    console.log('InterVal Practice')
}, 1000)

// ЁЯСЙ ржПржЯрж┐ ржкрзНрж░рждрж┐ рзз рж╕рзЗржХрзЗржирзНржб ржкрж░ржкрж░ "'InterVal Practice' ржжрзЗржЦрж╛ржмрзЗред

// тЬЕ setInterval ржмржирзНржз ржХрж░рж╛ (clearInterval())
let count = 0;
let interVal = setInterval(function () {
    count++;
    console.log(`Count : ${count}`)

    if (count === 5) {
        clearInterval(interVal);
        console.log('Interval is Stoped ')
    }
}, 1000)

// ЁЯСЙ clearInterval(interval) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ setInterval() ржмржирзНржз рж╣рзЯред



/* рзйя╕ПтГг Promise - ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржХрзЛржб ржорзНржпрж╛ржирзЗржЬ ржХрж░рж╛рж░ ржирждрзБржи ржЙржкрж╛рзЯ
Promise рж╣рж▓рзЛ ржПржХржЯрж┐ ржЕржмржЬрзЗржХрзНржЯ, ржпрж╛ ржнржмрж┐рж╖рзНржпрждрзЗ рж╕ржлрж▓ (resolve) ржмрж╛ ржмрзНржпрж░рзНрже (reject) рж╣рждрзЗ ржкрж╛рж░рзЗред */

// тЬЕ рж╕рж╛ржзрж╛рж░ржг Promise ржЙржжрж╛рж╣рж░ржг
let myPromise = new Promise(function (resolve, reject) {
    let success = true; // ржХржирзНржбрж┐рж╢ржи ржЪрзЗржХ ржХрж░рж╛ рж╣ржмрзЗ
    if (success) {
        resolve("тЬЕ Task completed!");
    } else {
        reject("тЭМ Task failed!");
    }
});

// Promise ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ (then & catch)
myPromise
    .then(function (result) {
        console.log(result); // тЬЕ Task completed!
    })
    .catch(function (error) {
        console.log(error);
    });

// ЁЯСЙ resolve() рж╣рж▓рзЗ .then() ржмрзНрж▓ржХ ржЪрж▓ржмрзЗ, ржЖрж░ reject() рж╣рж▓рзЗ .catch() ржмрзНрж▓ржХ ржЪрж▓ржмрзЗред


// тЬЕ setTimeout() ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрзНрж░рзНржпрж╛ржХржЯрж┐ржХрж╛рж▓ Promise ржЙржжрж╛рж╣рж░ржг
function fetchData() {
    return new Promise((resolve, reject) => {
        console.log("Fetching data...");
        setTimeout(() => {
            let success = true;
            if (success) {
                resolve("тЬЕ Data fetched successfully!");
            } else {
                reject("тЭМ Data fetch failed!");
            }
        }, 2000);
    });
}

// Promise ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛
fetchData()
    .then(result => console.log(result))
    .catch(error => console.log(error));




/* рзкя╕ПтГг async/await - ржЖрж░ржУ рж╕рж╣ржЬ ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржХрзЛржб */

/*
ЁЯФ╣ async ржХрж┐?
async рж╣рж▓ ржПржХржЯрж┐ ржХрзАржУрзЯрж╛рж░рзНржб, ржпрж╛ ржлрж╛ржВрж╢ржиржХрзЗ Promise рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рждрзЗ ржмрж╛ржзрзНржп ржХрж░рзЗред

ЁЯФ╣ await ржХрж┐?
await рж╣рж▓ ржПржХржЯрж┐ ржХрзАржУрзЯрж╛рж░рзНржб, ржпрж╛ Promise-ржПрж░ рж░рзЗржЬрж╛рж▓рзНржЯ ржкрж╛ржУрзЯрж╛рж░ ржЬржирзНржп ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзЗред
*/

// тЬЕ async/await ржжрж┐рзЯрзЗ рж╕рж╣ржЬ Promise ржмрзНржпржмрж╣рж╛рж░
async function fetchData() {
    console.log("Fetching data...");

    let result = await new Promise(resolve => {
        setTimeout(() => resolve("тЬЕ Data fetched successfully!"), 2000);
    });

    console.log(result);
}

fetchData();

// ЁЯСЙ ржПржЦрж╛ржирзЗ await Promise-ржПрж░ рж░рзЗржЬрж╛рж▓рзНржЯ ржкрж╛ржУрзЯрж╛рж░ ржЬржирзНржп ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░ржЫрзЗ, рждрж╛ржЗ ржХрзЛржб ржЖрж░ржУ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржжрзЗржЦрж╛ржЪрзНржЫрзЗред

// тЬЕ try...catch ржжрж┐рзЯрзЗ async/await Error Handling
async function fetchData() {
    try {
        console.log("Fetching data...");

        let result = await new Promise((resolve, reject) => {
            setTimeout(() => reject("тЭМ Data fetch failed!"), 2000);
        });

        console.log(result);
    } catch (error) {
        console.log(error);
    }
}

fetchData();

// ЁЯСЙ try...catch ржмрзНрж▓ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ .catch() ржЫрж╛рзЬрж╛ржЗ Error рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛ ржпрж╛рзЯред

/* 
ЁЯОп ржЙржкрж╕ржВрж╣рж╛рж░
ЁЯУМ setTimeout() - ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕ржорзЯ ржкрж░рзЗ ржлрж╛ржВрж╢ржи ржЪрж╛рж▓рж╛рзЯред
ЁЯУМ setInterval() - ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕ржорзЯ ржкрж░ржкрж░ ржлрж╛ржВрж╢ржи ржЪрж╛рж▓рж╛рзЯред
ЁЯУМ Promise - ржЕрзНржпрж╛рж╕рж┐ржиржХрзНрж░рзЛржирж╛рж╕ ржЕржкрж╛рж░рзЗрж╢ржи ржкрж░рж┐ржЪрж╛рж▓ржирж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯред
ЁЯУМ async/await - Promise ржЖрж░ржУ рж╕рж╣ржЬржнрж╛ржмрзЗ рж▓рж┐ржЦрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред
*/